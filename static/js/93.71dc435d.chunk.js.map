{"version":3,"file":"static/js/93.71dc435d.chunk.js","mappings":"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","sources":["Services/services.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const KEY = 'api_key=34aace01c22833500b5a31ff5ef2542a';\nexport const PARAM_FILMS_DAY = '/trending/movie/day?';\nexport const PARAM_SEARCH_MOVIE = '/search/movie?';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const MOVIE = '/movie/';\nexport const PARAMS_CREDITS = '/credits?';\nexport const PARAMS_REVIEWS = '/reviews?';\nexport const PARAMS_LANGUAGE = '&language=en-US';\n\nexport async function fetchMovie(query) {\n  const res = await axios.get(\n    `${BASE_URL}${PARAM_SEARCH_MOVIE}${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return res.data.results;\n}\n\nexport async function fetchCast(movieId) {\n  const res = await axios.get(\n    `${BASE_URL}${MOVIE}${movieId}${PARAMS_CREDITS}${KEY}${PARAMS_LANGUAGE}`\n  );\n  return res.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const res = await axios.get(\n    `${BASE_URL}${MOVIE}${movieId}${PARAMS_REVIEWS}${KEY}${PARAMS_LANGUAGE}&page=1`\n  );\n  return res.data.results;\n}\n\nexport async function fetchDaysFilms() {\n  const res = await axios.get(`${BASE_URL}${PARAM_FILMS_DAY}${KEY}`);\n  return res.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const res = await axios.get(\n    `${BASE_URL}${MOVIE}${movieId}?${KEY}${PARAMS_LANGUAGE}`\n  );\n  return res.data;\n}\n","import styled from 'styled-components';\n\nexport const ListActors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[7]}px;\n`;\n\nexport const ItemActor = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  border: ${p => p.theme.borders.normal};\n  box-shadow: 0px 5px 12px -5px;\n  background-color: ${p => p.theme.colors.twoBackgroundColor};\n`;\n\nexport const ImgActor = styled.img`\n  display: block;\n  margin: 0;\n  max-width: 100%;\n  height: auto;\n  background-position: center;\n`;\n\nexport const SecondaryTitle = styled.h3`\n  color: ${p => p.theme.colors.accent};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.text};\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: ${p => p.theme.fontSizes[1]}px;\n  font-weight: ${p => p.theme.fontWeights.middle};\n  color: ${p => p.theme.colors.text};\n  margin-top: 0;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 180px;\n  margin: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast, IMG_URL } from 'Services/services';\nimport {\n  ListActors,\n  ItemActor,\n  SecondaryTitle,\n  Text,\n  Card,\n  ImgActor,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [castActors, setCastActors] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const finedCast = await fetchCast(movieId);\n        setCastActors(finedCast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {castActors && (\n        <ListActors>\n          {castActors.map(item => {\n            return (\n              <ItemActor key={item.cast_id}>\n                <Card>\n                  <SecondaryTitle>{item.name}</SecondaryTitle>\n                  <Text>{item.character}</Text>\n                </Card>\n                {item.profile_path ? (\n                  <ImgActor\n                    src={`${IMG_URL}${item.profile_path}`}\n                    alt={item.name}\n                    width={200}\n                  />\n                ) : (\n                  <img\n                    src=\"https://via.placeholder.com/200x300\"\n                    alt=\"Not found\"\n                  />\n                )}\n              </ItemActor>\n            );\n          })}\n        </ListActors>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","KEY","PARAM_FILMS_DAY","PARAM_SEARCH_MOVIE","IMG_URL","MOVIE","PARAMS_CREDITS","PARAMS_REVIEWS","PARAMS_LANGUAGE","fetchMovie","query","axios","res","data","results","fetchCast","movieId","cast","fetchReviews","fetchDaysFilms","fetchMovieDetails","ListActors","styled","p","theme","space","ItemActor","borders","normal","colors","twoBackgroundColor","ImgActor","SecondaryTitle","accent","text","Text","fontSizes","fontWeights","middle","Card","useState","castActors","setCastActors","useParams","useEffect","finedCast","console","log","message","map","item","name","character","profile_path","src","alt","width","cast_id"],"sourceRoot":""}